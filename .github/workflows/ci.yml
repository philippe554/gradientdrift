name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 1 * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      # Keep running other jobs even if one fails
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        dependency-set: ['2025', 'latest']
        include:
          - python-version: '3.10'
            dependency-set: 'oldest'
          - python-version: '3.11'
            dependency-set: 'oldest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install "Oldest" Dependencies
        if: matrix.dependency-set == 'oldest'
        run: |
          pip install -e . "jax==0.4.34" "jaxlib==0.4.34" "optax==0.2.4" "numpy==1.24.1" "scipy==1.10.1" "lark==1.1.5" pytest arch

      - name: Install dependencies from 2025
        if: matrix.dependency-set == '2025'
        run: |
          pip install -e . "jax==0.6.2" "jaxlib==0.6.2" "optax==0.2.5" "numpy==2.2.6" "scipy==1.15.3" "lark==1.2.2" pytest arch

      - name: Install latest dependencies
        if: matrix.dependency-set == 'latest'
        run: |
          pip install -e . jax jaxlib optax numpy scipy lark pytest arch

      - name: Display installed versions
        run: |
          echo "Python version: ${{ matrix.python-version }}"
          echo "Dependency set: ${{ matrix.dependency-set }}"
          echo "--------------------"
          pip freeze

      - name: Run tests
        run: pytest